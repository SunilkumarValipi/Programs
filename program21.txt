
-------Using Extend Thread-----


package com.techno.multi;
class Sandeep extends Thread{
	 synchronized public void run() {
		for(int i=0; i<=5; i++) {
			System.out.println(i);
		}
	}
}


class sunil extends Thread{

	@Override
	public void run() {
		for(int i=6 ; i<=10; i++) {
			System.out.println(i);
		}
		
	}


	
}


public class DemoSynchronized {
	public static void main(String[] args) {
		new Thread (()->{
			
		}).start();
		
		
//		new Thread( ()->{
//			for(int i=1; i<=10; i++) {
//				System.out.println(i);
//				
//				try {
//					Thread.sleep(1000);
//				} catch (InterruptedException e) {
//					// TODO Auto-generated catch block
//					e.printStackTrace();
//				}
//			}
//			
//		}).start();
		Sandeep sandeep = new Sandeep();
		sunil sunil = new sunil();
		sandeep.start();
		sunil.start();
	}

}

----------Using Runnable Thread-----------

package com.techno.Runnable;

public class DemoThread implements Runnable {
	public void run() {
		for(int i=0; i<=10;i++) {
			System.out.println(i);
		}
	}
	public static void main(String[] args) {

			DemoThread d=new DemoThread();
			Thread t1=new Thread(d);
			t1.start();
			 
			DemoThread down =new DemoThread();
			Thread t2=new Thread(down);
			t2.start();
			}
	}


----Using Syncgronized created a booking bus Tickets------


package com.techno.Synchronised;

public class Passenger extends Thread{
	TicketBook book;
	int noOfTickets;
	public Passenger(TicketBook book, int noOfTickets) {
		super();
		this.book = book;
		this.noOfTickets = noOfTickets;
	}
	@Override
		public void run() {
			book.bookTickets(noOfTickets);
		}
	}

    ======================================
	
	package com.techno.Synchronised;

    public class TicketBook {
	int tickets = 20;
	
	public void bookTickets(int noOfTickets) {
		if(tickets<noOfTickets) {
			System.out.println("tickets not Available");
		}else {
			System.out.println(noOfTickets+"Tickets are booked");
			tickets = tickets-noOfTickets;
			System.out.println("Total no.of tickets left :"+tickets);
			
		}
	}

    }
    ============================================
	
	package com.techno.Synchronised;

    public class Main {
	public static void main(String[] args) {
		TicketBook book = new TicketBook();
		Passenger vamsi=new Passenger(book, 10);
		Passenger Bhushan=new Passenger(book, 5);
		Passenger Siddu=new Passenger(book, 15);
		
		vamsi.start();
		Bhushan.start();
		Siddu.start();
	}

    }

	
	---------Thread Deadlock-------------------
	
	
public class DeadLock {
	public static Object lock1 = new Object();
	public static Object lock2 = new Object();
	
	public static void main(String[] args) {
	      Threadsunil T1 = new Threadsunil();
	      ThreadDemo2 T2 = new ThreadDemo2();
	      T1.start();
	      T2.start();
	
	}
	
	public static class Threadsunil extends Thread{
		public void run() {
			synchronized (lock2) {
				System.out.println("Hee this is lockk 2");
				try {
					Thread.sleep(1000);
				} catch (InterruptedException e) {
					e.printStackTrace();
					System.out.println("Hii am Sandeep");
					synchronized (lock1) {
						System.out.println("holding lock 1 & 2");
					}
				}
			}

		}
			
	}
	public static class ThreadDemo2 extends Thread{
		public void run() {
			synchronized(lock1) {
				System.out.println("Hello this is lock1");
				try {
					Thread.sleep(1000);
				} catch (InterruptedException e) {}
					System.out.println("Hellon waiting for lock2");
					synchronized (lock2) {
						System.out.println("Waitting for lock1 & lock2");
					}
				}
		
	
		}
	}
}

		


 
